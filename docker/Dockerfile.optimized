# Multi-stage build untuk size dan security optimization

# Stage 1: Dependencies
FROM oven/bun:1.2.2-alpine AS deps
WORKDIR /app
COPY package.json bun.lock ./
RUN bun install --frozen-lockfile --production

# Stage 2: Builder
FROM oven/bun:1.2.2-alpine AS builder
WORKDIR /app
COPY . .
COPY --from=deps /app/node_modules ./node_modules
RUN bun run build

# Stage 3: Runtime
FROM oven/bun:1.2.2-alpine AS runtime

# Install only what we need
RUN apk add --no-cache curl

WORKDIR /app

# Create non-root user for security
RUN addgroup -g 1001 -S bunjs && \
    adduser -S bunjs -u 1001

# Copy built application
COPY --from=builder --chown=bunjs:bunjs /app/dist ./dist
COPY --from=builder --chown=bunjs:bunjs /app/node_modules ./node_modules
COPY --from=builder --chown=bunjs:bunjs /app/package.json ./

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads && \
    chown -R bunjs:bunjs /app/logs /app/uploads

USER bunjs

EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

CMD ["bun", "run", "dist/index.js"]